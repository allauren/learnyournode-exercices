   
 # JAVASCRIPT BEST PRACTICES  
   
 ## Test Driven Development (Exercise 6 of 8)  
   
 # TDD  
   
  This exercise will test your ability to write code based off of the tests  
  that are provided. Using Test-Driven Development, you write the tests for  
  the functionality that you want to implement first. Then, you write the  
  code for the method so that the tests you initially wrote.  
   
  The tests in this exercise are provided, but they will drive the design of  
  the function you will implement, convertToChange(). convertToChange()  
  should take in a single integer number in cents (e.g. $0.89 = 89) and  
  return an array of the coins that would add up to this number. Keep in  
  mind that the array of coins should be in the highest order in terms of  
  coin value. For example, if 26 is the parameter, you should return 1 penny  
  and 1 quarter in the array, even though you could technically return  
  several other combinations of coins (e.g. 2 dimes, 1 nickel, 1 penny).  
   
  Run the tests in this exercise to see what the expected output is. Then  
  implement the convertToChange() function in changeHandler.js to verify  
  that the tests pass.  
   
 ─────────────────────────────────────────────────────────────────────────────  
   
   » To print these instructions again, run: js-best-practices print  
   » To execute your program in a test environment, run: js-best-practices  
     run program.js  
   » To verify your program, run: js-best-practices verify program.js  
   » For help run: js-best-practices help  
   

# JAVASCRIPT BEST PRACTICES

## Test Driven Development (Exercise 6 of 8)



  1) should have function called convertToChange
  2) convertToChange should return a quarter, nickel, dime, and two pennies as change for 42 cents
  3) convertToChange should return an empty array for 0 cents
  4) convertToChange should return three quarters and a penny for 76 cents

  0 passing (6ms)
  4 failing

  1)  should have function called convertToChange:

      AssertionError: expected 'undefined' to equal 'function'
      + expected - actual

      -undefined
      +function
      
      at Context.<anonymous> (/usr/local/lib/node_modules/js-best-practices/exercises/tdd/exercise.js:12:53)

  2)  convertToChange should return a quarter, nickel, dime, and two pennies as change for 42 cents:
     TypeError: changeHandler.convertToChange is not a function
      at Context.<anonymous> (/usr/local/lib/node_modules/js-best-practices/exercises/tdd/exercise.js:19:32)

  3)  convertToChange should return an empty array for 0 cents:
     TypeError: changeHandler.convertToChange is not a function
      at Context.<anonymous> (/usr/local/lib/node_modules/js-best-practices/exercises/tdd/exercise.js:28:32)

  4)  convertToChange should return three quarters and a penny for 76 cents:
     TypeError: changeHandler.convertToChange is not a function
      at Context.<anonymous> (/usr/local/lib/node_modules/js-best-practices/exercises/tdd/exercise.js:37:32)



